package com.ned.bootcamp_homework1;

import java.io.File;
import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;

import org.apache.maven.model.Dependency;
import org.apache.maven.plugin.AbstractMojo;
import org.apache.maven.plugin.MojoExecutionException;
import org.apache.maven.plugin.MojoFailureException;
import org.apache.maven.plugins.annotations.LifecyclePhase;
import org.apache.maven.plugins.annotations.Mojo;
import org.apache.maven.plugins.annotations.Parameter;
import org.apache.maven.project.MavenProject;

@Mojo(name = "summarize", defaultPhase = LifecyclePhase.INSTALL)
public class ProjectSummary extends AbstractMojo{
	
	@Parameter(defaultValue = "${project}", required = true)
	private MavenProject project;
	
	@Parameter(defaultValue = "default", required = true)
	private String outputFile;
	
	public void execute() throws MojoExecutionException, MojoFailureException {
		// TODO Auto-generated method stub
		
		List<Dependency> dependencies = project.getDependencies();
		
		this.createToFile(outputFile);
		//project.getVersion()
		//project.getGroupId()
		//project.getArtifactId()
		//project.getBuildPlugins()
		//project.getDevelopers()
		//project.getProperties().
		
	}
	
	public synchronized void createToFile(String outputFile) {
		String pathTemp = System.getProperty("user.dir"); //it will give the root directory of where your program runs
		pathTemp = pathTemp + "/target/" + this.outputFile + ".txt"; //here file name from the argument
		//Path path=Paths.get(pathTemp);
		
		//File myObj = new File(pathTemp);
		
		try {
		      File myObj = new File(pathTemp);
		      if (myObj.createNewFile()) {
		        System.out.println("File created: " + myObj.getName());
		      } else {
		        System.out.println("File already exists.");
		      }
		    } catch (IOException e) {
		      System.out.println("An error occurred.");
		      e.printStackTrace();
		    }
		
		
    }
}






